name: Cosmo Previews
on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
      - closed
      - synchronize

jobs:
  create:
    runs-on: ubuntu-latest
    if: github.event.action == 'opened' || github.event.action == 'reopened'
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v4
        with:
          node-version: 20.10.0
          cache: npm

      - name: Install wgc
        run: npm i -g wgc@latest

      # 1. Create & Publish feature subgraph based on cosmo.yaml
      # 2. Create a new feature flag
      - uses: wundergraph/cosmo-previews@v0.1.0
        id: ff
        with:
          config_path: .github/cosmo.yaml
          create: true # Create the feature flag + subgraphs from cosmo.yaml
          cosmo_api_key: ${{ secrets.COSMO_API_KEY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - run: |
          echo "${{ steps.ff.outputs.feature_subgraphs_to_deploy }}"

      - uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy apps to Fly.io
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          cd demos/go
          echo '${{ steps.ff.outputs.feature_subgraphs_to_deploy }}' | jq -c '.[]' | while read -r subgraph; do
            name=$(echo "$subgraph" | jq -r '.featureSubgraphName')
            baseSubgraphName=$(echo "$subgraph" | jq -r '.baseSubgraphName')
            dockerFilePath=./Dockerfile.$baseSubgraphName
            flyctl launch --name $name --region lax --dockerfile $dockerFilePath --org wundergraph-demos --yes
          done

  update:
    runs-on: ubuntu-latest
    if: github.event.action == 'synchronize'
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v4
        with:
          node-version: 20.10.0
          cache: npm

      - name: Install wgc
        run: npm i -g wgc@latest

      - uses: wundergraph/cosmo-previews@v0.1.0
        id: ff
        with:
          config_path: .github/cosmo.yaml
          update: true # Only update the feature subgraphs from cosmo.yaml
          cosmo_api_key: ${{ secrets.COSMO_API_KEY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - run: |
          echo "${{ steps.ff.outputs.feature_subgraphs_to_deploy }}"
          echo "${{ steps.ff.outputs.feature_subgraphs_to_destroy }}"

      - uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy or update apps on Fly.io
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          cd demos/go
          echo '${{ steps.ff.outputs.feature_subgraphs_to_deploy }}' | jq -c '.[]' | while read -r subgraph; do
            name=$(echo "$subgraph" | jq -r '.featureSubgraphName')
            baseSubgraphName=$(echo "$subgraph" | jq -r '.baseSubgraphName')
            dockerFilePath=./Dockerfile.$baseSubgraphName
            echo $name
            echo $baseSubgraphName
            echo $dockerFilePath
            if flyctl apps list | grep -q $name; then
              echo "Updating $name"
              flyctl deploy --app $name --dockerfile $dockerFilePath --yes
            else
              flyctl launch --name $name --region lax --dockerfile $dockerFilePath --org wundergraph-demos --yes
            fi
          done

          echo '${{ steps.ff.outputs.feature_subgraphs_to_destroy }}' | jq -c '.[]' | while read -r subgraph; do
            name=$(echo "$subgraph" | jq -r '.featureSubgraphName')
            flyctl apps destroy $name --yes
          done

  destroy:
    runs-on: ubuntu-latest
    if: github.event.action == 'closed'
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v4
        with:
          node-version: 20.10.0
          cache: npm

      - name: Install wgc
        run: npm i -g wgc@latest

      - uses: wundergraph/cosmo-previews@v0.1.0
        id: ff
        with:
          config_path: .github/cosmo.yaml
          destroy: true # Only destroy the feature flag + subgraphs from cosmo.yaml
          cosmo_api_key: ${{ secrets.COSMO_API_KEY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - run: |
          echo "Feature flag and the feature subgraphs have been destroyed. You can now unprovision the subgraph services."
      - run: |
          echo "${{ steps.ff.outputs.feature_subgraphs_to_destroy }}"

      - uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Destroy apps on Fly.io
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          echo '${{ steps.ff.outputs.feature_subgraphs_to_destroy }}' | jq -c '.[]' | while read -r subgraph; do
            name=$(echo "$subgraph" | jq -r '.featureSubgraphName')
            flyctl apps destroy $name --yes
          done
